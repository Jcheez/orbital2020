{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bryan\\\\Desktop\\\\my-app\\\\orbital2020\\\\src\\\\components\\\\latest rate component\\\\gbpgraph_monthly.js\";\nimport React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nclass gbpchart_m extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/currencies/GBP\").then(response => {\n      var today = new Date();\n      var Month = today.getMonth() + 1;\n      var Month_str = Month.toString();\n\n      if (Month_str.length === 1) {\n        Month_str = \"0\" + Month_str;\n      }\n\n      console.log(\"01/01/2020\".split(\"/\"));\n      var today_dbs = [];\n      var today_uob = [];\n      var today_ocbc = [];\n\n      for (let i = 0, len = response.data.length; i < len; i++) {\n        // let curr_date = response.data[i].Date.split(\"/\");\n        let db_date = moment(response.data[i].Date, \"DD-MM-YYYY\");\n        let current_date = moment();\n        let date_difference = current_date.diff(db_date, \"days\");\n        let time_recorded = response.data[i].timeRecorded;\n\n        if ( // curr_date[1] === Month_str &&\n        date_difference < 32 && (time_recorded === \"09:00\" || time_recorded === \"09:01\" || time_recorded === \"09:02\" || time_recorded === \"09:03\" || time_recorded === \"09:04 \" || time_recorded === \"09:05\" || time_recorded === \"18:00\" || time_recorded === \"18:01\" || time_recorded === \"18:02\" || time_recorded === \"18:03\" || time_recorded === \"18:04\" || time_recorded === \"18:05\")) {\n          if (response.data[i].Bank === \"DBS\") {\n            today_dbs.push(response.data[i]);\n          } else if (response.data[i].Bank === \"UOB\") {\n            today_uob.push(response.data[i]);\n          } else if (response.data[i].Bank === \"OCBC\") {\n            today_ocbc.push(response.data[i]);\n          }\n        }\n      }\n\n      function get_rates(item) {\n        var rate = item.rates[0].v / item.rates[1].v;\n        return rate;\n      }\n\n      function get_timedate(item) {\n        var timedate = [item.Date, item.timeRecorded].join(\" \");\n        return timedate;\n      }\n\n      var dbs_rates = today_dbs.map(get_rates);\n      var uob_rates = today_uob.map(get_rates);\n      var ocbc_rates = today_ocbc.map(get_rates);\n      var dbs_timedates = today_dbs.map(get_timedate);\n      this.setState({\n        chartData: {\n          labels: dbs_timedates,\n          datasets: [{\n            label: \"DBS\",\n            data: dbs_rates,\n            backgroundColor: [\"rgba(255, 255, 255, 0)\"],\n            borderColor: [\"rgba(255, 159, 64, 1)\"],\n            borderWidth: 1\n          }, {\n            label: \"UOB\",\n            data: uob_rates,\n            backgroundColor: [\"rgba(255, 255, 255, 0)\"],\n            borderColor: [\"rgba(63, 191, 127, 1)\"],\n            borderWidth: 1\n          }, {\n            label: \"OCBC\",\n            data: ocbc_rates,\n            backgroundColor: [\"rgba(255, 255, 255, 0)\"],\n            borderColor: [\"rgba(191, 63, 63, 1)\"],\n            borderWidth: 1\n          }]\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: this.state.chartData,\n      height: \"400\",\n      width: \"400\",\n      options: {\n        maintainAspectRatio: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default gbpchart_m;","map":{"version":3,"sources":["C:/Users/Bryan/Desktop/my-app/orbital2020/src/components/latest rate component/gbpgraph_monthly.js"],"names":["React","Component","Line","axios","moment","gbpchart_m","constructor","props","state","chartData","componentDidMount","get","then","response","today","Date","Month","getMonth","Month_str","toString","length","console","log","split","today_dbs","today_uob","today_ocbc","i","len","data","db_date","current_date","date_difference","diff","time_recorded","timeRecorded","Bank","push","get_rates","item","rate","rates","v","get_timedate","timedate","join","dbs_rates","map","uob_rates","ocbc_rates","dbs_timedates","setState","labels","datasets","label","backgroundColor","borderColor","borderWidth","catch","error","render","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nclass gbpchart_m extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/currencies/GBP\")\r\n      .then((response) => {\r\n        var today = new Date();\r\n\r\n        var Month = today.getMonth() + 1;\r\n        var Month_str = Month.toString();\r\n\r\n        if (Month_str.length === 1) {\r\n          Month_str = \"0\" + Month_str;\r\n        }\r\n        console.log(\"01/01/2020\".split(\"/\"));\r\n\r\n        var today_dbs = [];\r\n        var today_uob = [];\r\n        var today_ocbc = [];\r\n\r\n        for (let i = 0, len = response.data.length; i < len; i++) {\r\n          // let curr_date = response.data[i].Date.split(\"/\");\r\n          let db_date = moment(response.data[i].Date, \"DD-MM-YYYY\");\r\n          let current_date = moment();\r\n          let date_difference = current_date.diff(db_date, \"days\");\r\n          let time_recorded = response.data[i].timeRecorded;\r\n          if (\r\n            // curr_date[1] === Month_str &&\r\n            date_difference < 32 &&\r\n            (time_recorded === \"09:00\" ||\r\n              time_recorded === \"09:01\" ||\r\n              time_recorded === \"09:02\" ||\r\n              time_recorded === \"09:03\" ||\r\n              time_recorded === \"09:04 \" ||\r\n              time_recorded === \"09:05\" ||\r\n              time_recorded === \"18:00\" ||\r\n              time_recorded === \"18:01\" ||\r\n              time_recorded === \"18:02\" ||\r\n              time_recorded === \"18:03\" ||\r\n              time_recorded === \"18:04\" ||\r\n              time_recorded === \"18:05\")\r\n          ) {\r\n            if (response.data[i].Bank === \"DBS\") {\r\n              today_dbs.push(response.data[i]);\r\n            } else if (response.data[i].Bank === \"UOB\") {\r\n              today_uob.push(response.data[i]);\r\n            } else if (response.data[i].Bank === \"OCBC\") {\r\n              today_ocbc.push(response.data[i]);\r\n            }\r\n          }\r\n        }\r\n\r\n        function get_rates(item) {\r\n          var rate = item.rates[0].v / item.rates[1].v;\r\n          return rate;\r\n        }\r\n\r\n        function get_timedate(item) {\r\n          var timedate = [item.Date, item.timeRecorded].join(\" \");\r\n          return timedate;\r\n        }\r\n\r\n        var dbs_rates = today_dbs.map(get_rates);\r\n        var uob_rates = today_uob.map(get_rates);\r\n        var ocbc_rates = today_ocbc.map(get_rates);\r\n\r\n        var dbs_timedates = today_dbs.map(get_timedate);\r\n\r\n        this.setState({\r\n          chartData: {\r\n            labels: dbs_timedates,\r\n            datasets: [\r\n              {\r\n                label: \"DBS\",\r\n                data: dbs_rates,\r\n                backgroundColor: [\"rgba(255, 255, 255, 0)\"],\r\n                borderColor: [\"rgba(255, 159, 64, 1)\"],\r\n                borderWidth: 1,\r\n              },\r\n              {\r\n                label: \"UOB\",\r\n                data: uob_rates,\r\n                backgroundColor: [\"rgba(255, 255, 255, 0)\"],\r\n                borderColor: [\"rgba(63, 191, 127, 1)\"],\r\n                borderWidth: 1,\r\n              },\r\n              {\r\n                label: \"OCBC\",\r\n                data: ocbc_rates,\r\n                backgroundColor: [\"rgba(255, 255, 255, 0)\"],\r\n                borderColor: [\"rgba(191, 63, 63, 1)\"],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Line\r\n          data={this.state.chartData}\r\n          height=\"400\"\r\n          width=\"400\"\r\n          options={{ maintainAspectRatio: false }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default gbpchart_m;\r\n"]},"metadata":{},"sourceType":"module"}