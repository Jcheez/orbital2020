{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bryan\\\\Desktop\\\\my-app\\\\orbital2020\\\\src\\\\components\\\\latest rate component\\\\usdgraph_daily.js\";\nimport React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nclass usdchart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/currencies/USD\").then(response => {\n      var today = new Date();\n      var Day = today.getDate();\n      var Month = today.getMonth() + 1;\n      var Month_str = Month.toString();\n      var Year = today.getFullYear();\n\n      if (Month_str.length === 1) {\n        Month_str = \"0\" + Month_str;\n      }\n\n      var today_date = Day + \"/\" + Month_str + \"/\" + Year;\n      var today_dbs = [];\n      var today_uob = [];\n      var today_ocbc = [];\n\n      for (let i = 0, len = response.data.length; i < len; i++) {\n        let curr_date = response.data[i].Date;\n\n        if (curr_date === today_date) {\n          if (response.data[i].Bank === \"DBS\" && typeof response.data[i].rates[0].v === \"number\") {\n            today_dbs.push(response.data[i]);\n          } else if (response.data[i].Bank === \"UOB\" && typeof response.data[i].rates[0].v === \"number\") {\n            today_uob.push(response.data[i]);\n          } else if (response.data[i].Bank === \"OCBC\" && typeof response.data[i].rates[0].v === \"number\") {\n            today_ocbc.push(response.data[i]);\n          }\n        }\n      }\n\n      function get_rates(item) {\n        var rate = item.rates[0].v / item.rates[1].v;\n        return rate;\n      }\n\n      function get_timedate(item) {\n        var timedate = item.timeRecorded;\n        return timedate;\n      }\n\n      var dbs_rates = today_dbs.map(get_rates);\n      var uob_rates = today_uob.map(get_rates);\n      var ocbc_rates = today_ocbc.map(get_rates);\n      var dbs_timedates = today_dbs.map(get_timedate);\n      this.setState({\n        chartData: {\n          labels: dbs_timedates,\n          datasets: [{\n            label: \"DBS\",\n            data: dbs_rates,\n            backgroundColor: [\"rgba(255, 255, 255, 0)\"],\n            borderColor: [\"rgba(255, 159, 64, 1)\"],\n            borderWidth: 1\n          }, {\n            label: \"UOB\",\n            data: uob_rates,\n            backgroundColor: [\"rgba(255, 255, 255, 0)\"],\n            borderColor: [\"rgba(63, 191, 127, 1)\"],\n            borderWidth: 1\n          }, {\n            label: \"OCBC\",\n            data: ocbc_rates,\n            backgroundColor: [\"rgba(255, 255, 255, 0)\"],\n            borderColor: [\"rgba(191, 63, 63, 1)\"],\n            borderWidth: 1\n          }]\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: this.state.chartData,\n      height: \"400\",\n      width: \"400\",\n      options: {\n        maintainAspectRatio: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default usdchart;","map":{"version":3,"sources":["C:/Users/Bryan/Desktop/my-app/orbital2020/src/components/latest rate component/usdgraph_daily.js"],"names":["React","Component","Line","axios","usdchart","constructor","props","state","chartData","componentDidMount","get","then","response","today","Date","Day","getDate","Month","getMonth","Month_str","toString","Year","getFullYear","length","today_date","today_dbs","today_uob","today_ocbc","i","len","data","curr_date","Bank","rates","v","push","get_rates","item","rate","get_timedate","timedate","timeRecorded","dbs_rates","map","uob_rates","ocbc_rates","dbs_timedates","setState","labels","datasets","label","backgroundColor","borderColor","borderWidth","catch","error","console","log","render","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\n\r\nclass usdchart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/currencies/USD\")\r\n      .then((response) => {\r\n        var today = new Date();\r\n\r\n        var Day = today.getDate();\r\n        var Month = today.getMonth() + 1;\r\n        var Month_str = Month.toString();\r\n        var Year = today.getFullYear();\r\n\r\n        if (Month_str.length === 1) {\r\n          Month_str = \"0\" + Month_str;\r\n        }\r\n\r\n        var today_date = Day + \"/\" + Month_str + \"/\" + Year;\r\n\r\n        var today_dbs = [];\r\n        var today_uob = [];\r\n        var today_ocbc = [];\r\n\r\n        for (let i = 0, len = response.data.length; i < len; i++) {\r\n          let curr_date = response.data[i].Date;\r\n          if (curr_date === today_date) {\r\n            if (\r\n              response.data[i].Bank === \"DBS\" &&\r\n              typeof response.data[i].rates[0].v === \"number\"\r\n            ) {\r\n              today_dbs.push(response.data[i]);\r\n            } else if (\r\n              response.data[i].Bank === \"UOB\" &&\r\n              typeof response.data[i].rates[0].v === \"number\"\r\n            ) {\r\n              today_uob.push(response.data[i]);\r\n            } else if (\r\n              response.data[i].Bank === \"OCBC\" &&\r\n              typeof response.data[i].rates[0].v === \"number\"\r\n            ) {\r\n              today_ocbc.push(response.data[i]);\r\n            }\r\n          }\r\n        }\r\n\r\n        function get_rates(item) {\r\n          var rate = item.rates[0].v / item.rates[1].v;\r\n          return rate;\r\n        }\r\n\r\n        function get_timedate(item) {\r\n          var timedate = item.timeRecorded;\r\n          return timedate;\r\n        }\r\n\r\n        var dbs_rates = today_dbs.map(get_rates);\r\n        var uob_rates = today_uob.map(get_rates);\r\n        var ocbc_rates = today_ocbc.map(get_rates);\r\n\r\n        var dbs_timedates = today_dbs.map(get_timedate);\r\n\r\n        this.setState({\r\n          chartData: {\r\n            labels: dbs_timedates,\r\n            datasets: [\r\n              {\r\n                label: \"DBS\",\r\n                data: dbs_rates,\r\n                backgroundColor: [\"rgba(255, 255, 255, 0)\"],\r\n                borderColor: [\"rgba(255, 159, 64, 1)\"],\r\n                borderWidth: 1,\r\n              },\r\n              {\r\n                label: \"UOB\",\r\n                data: uob_rates,\r\n                backgroundColor: [\"rgba(255, 255, 255, 0)\"],\r\n                borderColor: [\"rgba(63, 191, 127, 1)\"],\r\n                borderWidth: 1,\r\n              },\r\n              {\r\n                label: \"OCBC\",\r\n                data: ocbc_rates,\r\n                backgroundColor: [\"rgba(255, 255, 255, 0)\"],\r\n                borderColor: [\"rgba(191, 63, 63, 1)\"],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Line\r\n          data={this.state.chartData}\r\n          height=\"400\"\r\n          width=\"400\"\r\n          options={{ maintainAspectRatio: false }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default usdchart;\r\n"]},"metadata":{},"sourceType":"module"}